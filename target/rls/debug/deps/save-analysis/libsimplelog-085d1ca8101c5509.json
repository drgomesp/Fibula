{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51],"program":"/home/drgomesp/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","simplelog","/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"term\"","-C","metadata=085d1ca8101c5509","-C","extra-filename=-085d1ca8101c5509","--out-dir","/home/drgomesp/src/github.com/drgomesp/fibula/target/rls/debug/deps","-L","dependency=/home/drgomesp/src/github.com/drgomesp/fibula/target/rls/debug/deps","--extern","chrono=/home/drgomesp/src/github.com/drgomesp/fibula/target/rls/debug/deps/libchrono-53dd4ca7d80fe5c7.rmeta","--extern","log=/home/drgomesp/src/github.com/drgomesp/fibula/target/rls/debug/deps/liblog-e62e2a125e30b7db.rmeta","--extern","term=/home/drgomesp/src/github.com/drgomesp/fibula/target/rls/debug/deps/libterm-273bc98aa2d359d4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/drgomesp/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,47,100,114,103,111,109,101,115,112,47,102,105,98,117,108,97,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,115,105,109,112,108,101,108,111,103,45,48,56,53,100,49,99,97,56,49,48,49,99,53,53,48,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"simplelog","disambiguator":[11493952287256236476,11872801356960571377]},"crate_root":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src","external_crates":[{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1361890166378126093,16858358408359390411]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8443867356829790139,13476652334878384599]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15697290677115759232,541639507884295073]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14102685612407006984,16620905339754334568]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2010494403059525824,13699191241625781244]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6652058712547399261,14952977158170456279]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4117120297157769757,6178971637923792110]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[4643857838277828185,516729280326696064]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[14592314521497498719,5355277242426522429]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[10608196673784553458,14990791156369960385]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":11,"id":{"name":"log","disambiguator":[17734760077592570764,4402262009934537731]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[4765075131968970217,10861113403788539258]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":13,"id":{"name":"term","disambiguator":[9132336792923374516,4648464570918538056]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[7667627767091882700,11972135401968278264]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":15,"id":{"name":"dirs","disambiguator":[1225414136348224833,7279902105392499207]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[9851714387976711521,7950100483898917173]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":17,"id":{"name":"chrono","disambiguator":[11769897765863576737,15878813284367793787]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":18,"id":{"name":"time","disambiguator":[6882285865552474761,12347298481985425413]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":19,"id":{"name":"num_integer","disambiguator":[1932470998532503666,14223116844041160648]}},{"file_name":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[8398615476240171627,4009675759640441178]}}],"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":334,"byte_end":7463,"line_start":8,"line_end":191,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1210,"byte_end":1216,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1242,"byte_end":1254,"line_start":33,"line_end":33,"column_start":25,"column_end":37},"alias_span":null,"name":"SimpleLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1256,"byte_end":1267,"line_start":33,"line_end":33,"column_start":39,"column_end":50},"alias_span":null,"name":"WriteLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1269,"byte_end":1283,"line_start":33,"line_end":33,"column_start":52,"column_end":66},"alias_span":null,"name":"CombinedLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1335,"byte_end":1345,"line_start":35,"line_end":35,"column_start":25,"column_end":35},"alias_span":null,"name":"TermLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1347,"byte_end":1359,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"alias_span":null,"name":"TermLogError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":300},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1377,"byte_end":1382,"line_start":37,"line_end":37,"column_start":15,"column_end":20},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":11,"index":316},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1384,"byte_end":1395,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":334,"byte_end":7463,"line_start":8,"line_end":191,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/drgomesp/.cargo/registry/src/github.com-1ecc6299db9ec823/simplelog-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":352}],"decl_id":null,"docs":"\n `simplelog` provides a series of logging facilities, that can be easily combined.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1025,"byte_end":1047,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8242,"byte_end":8248,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config { time, level, target, location, time_format }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" Configuration for the Loggers","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8231,"byte_end":8791,"line_start":18,"line_end":29,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8231,"byte_end":8791,"line_start":18,"line_end":29,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8324,"byte_end":8328,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"time","qualname":"::config::Config::time","value":"std::option::Option<log::Level>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"At which level and below the current time shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8418,"byte_end":8423,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"level","qualname":"::config::Config::level","value":"std::option::Option<log::Level>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"At which level and below the level itself shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":75},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8507,"byte_end":8513,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"target","qualname":"::config::Config::target","value":"std::option::Option<log::Level>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"At which level and below the target shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8610,"byte_end":8618,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"location","qualname":"::config::Config::location","value":"std::option::Option<log::Level>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"At which level and below a source code reference shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8755,"byte_end":8766,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"name":"time_format","qualname":"::config::Config::time_format","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"A chrono strftime string. See: https://docs.rs/chrono/0.4.0/chrono/format/strftime/index.html#specifiers\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":10052,"byte_end":10064,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"SimpleLogger","qualname":"::loggers::simplelog::SimpleLogger","value":"SimpleLogger {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":" The SimpleLogger struct. Provides a very basic Logger implementation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":10654,"byte_end":10658,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"init","qualname":"<SimpleLogger>::init","value":"fn (log_level: LevelFilter, config: Config) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the SimpleLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11461,"byte_end":11464,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleLogger>::new","value":"fn (log_level: LevelFilter, config: Config) -> Box<SimpleLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":81},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13327,"byte_end":13336,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"SetLogger","qualname":"::loggers::termlog::TermLogError::SetLogger","value":"TermLogError::SetLogger(SetLoggerError)","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"The type returned by set_logger if set_logger has already been called.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":87},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13588,"byte_end":13592,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Term","qualname":"::loggers::termlog::TermLogError::Term","value":"TermLogError::Term","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":"TermLogger initialization might also fail if stdout or stderr could not be opened,\ne.g. when no tty is attached to the process, it runs detached in the background, etc\n This is represented by the `Term` Kind\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13230,"byte_end":13242,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"TermLogError","qualname":"::loggers::termlog::TermLogError","value":"TermLogError::{SetLogger, Term}","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":87}],"decl_id":null,"docs":" TermLogger error type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":14505,"byte_end":14515,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"TermLogger","qualname":"::loggers::termlog::TermLogger","value":"TermLogger {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":" The TermLogger struct. Provides a stderr/out based Logger implementation","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":15105,"byte_end":15109,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"init","qualname":"<TermLogger>::init","value":"fn (log_level: LevelFilter, config: Config) -> Result<(), TermLogError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the TermLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":15980,"byte_end":15983,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<TermLogger>::new","value":"fn (log_level: LevelFilter, config: Config) -> Option<Box<TermLogger>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19476,"byte_end":19487,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"WriteLogger","qualname":"::loggers::writelog::WriteLogger","value":"WriteLogger {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47}],"decl_id":null,"docs":" The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":20214,"byte_end":20218,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<WriteLogger<W>>::init","value":"fn (log_level: LevelFilter, config: Config, writable: W) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the WriteLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21127,"byte_end":21130,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteLogger<W>>::new","value":"fn (log_level: LevelFilter, config: Config, writable: W) -> Box<WriteLogger<W>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":22780,"byte_end":22794,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"CombinedLogger","qualname":"::loggers::comblog::CombinedLogger","value":"CombinedLogger {  }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":23906,"byte_end":23910,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"init","qualname":"<CombinedLogger>::init","value":"fn (logger: Vec<Box<SharedLogger>>) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the CombinedLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":25111,"byte_end":25114,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<CombinedLogger>::new","value":"fn (logger: Vec<Box<SharedLogger>>) -> Box<CombinedLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1573,"byte_end":1585,"line_start":46,"line_end":46,"column_start":11,"column_end":23},"name":"SharedLogger","qualname":"::SharedLogger","value":"SharedLogger: Log","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358}],"decl_id":null,"docs":" Trait to have a common interface to obtain the Level of Loggers","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1919,"byte_end":1924,"line_start":59,"line_end":59,"column_start":8,"column_end":13},"name":"level","qualname":"::SharedLogger::level","value":"fn (&self) -> LevelFilter","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Returns the set Level for this Logger","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2363,"byte_end":2369,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"config","qualname":"::SharedLogger::config","value":"fn (&self) -> Option<&Config>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Inspect the config of a running Logger","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2454,"byte_end":2460,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"as_log","qualname":"::SharedLogger::as_log","value":"fn (self: Box<Self>) -> Box<Log>","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Returns the logger as a Log trait object\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8810,"byte_end":8816,"line_start":31,"line_end":31,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":10147,"byte_end":10159,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11647,"byte_end":11659,"line_start":63,"line_end":63,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":12533,"byte_end":12545,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13619,"byte_end":13631,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13812,"byte_end":13824,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":14199,"byte_end":14211,"line_start":52,"line_end":52,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":14605,"byte_end":14615,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":18159,"byte_end":18169,"line_start":179,"line_end":179,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":18542,"byte_end":18552,"line_start":196,"line_end":196,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19620,"byte_end":19631,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21358,"byte_end":21369,"line_start":66,"line_end":66,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21842,"byte_end":21853,"line_start":84,"line_end":84,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":22865,"byte_end":22879,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":25447,"byte_end":25461,"line_start":89,"line_end":89,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":25870,"byte_end":25884,"line_start":110,"line_end":110,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,99,111,110,102,105,103,46,114,115],"byte_start":8810,"byte_end":8816,"line_start":31,"line_end":31,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":10147,"byte_end":10159,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11647,"byte_end":11659,"line_start":63,"line_end":63,"column_start":14,"column_end":26},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":58},"to":{"krate":11,"index":246}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":12533,"byte_end":12545,"line_start":95,"line_end":95,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":58},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13619,"byte_end":13631,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":382},"to":{"krate":2,"index":8474}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":13812,"byte_end":13824,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":382},"to":{"krate":1,"index":2482}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":14199,"byte_end":14211,"line_start":52,"line_end":52,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":382},"to":{"krate":2,"index":2672}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":14605,"byte_end":14615,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":18159,"byte_end":18169,"line_start":179,"line_end":179,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":160},"to":{"krate":11,"index":246}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,116,101,114,109,108,111,103,46,114,115],"byte_start":18542,"byte_end":18552,"line_start":196,"line_end":196,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":160},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19620,"byte_end":19631,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21358,"byte_end":21369,"line_start":66,"line_end":66,"column_start":41,"column_end":52},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":218},"to":{"krate":11,"index":246}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21842,"byte_end":21853,"line_start":84,"line_end":84,"column_start":50,"column_end":61},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":218},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":22865,"byte_end":22879,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":25447,"byte_end":25461,"line_start":89,"line_end":89,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":266},"to":{"krate":11,"index":246}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,111,103,103,101,114,115,47,99,111,109,98,108,111,103,46,114,115],"byte_start":25870,"byte_end":25884,"line_start":110,"line_end":110,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":266},"to":{"krate":0,"index":352}},{"span":{"file_name":[47,104,111,109,101,47,100,114,103,111,109,101,115,112,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,105,109,112,108,101,108,111,103,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1587,"byte_end":1590,"line_start":46,"line_end":46,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":11,"index":246},"to":{"krate":0,"index":352}}]}